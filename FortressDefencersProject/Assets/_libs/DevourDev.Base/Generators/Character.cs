namespace DevourDev.Base.Generators
{

    public struct Character
    {
        public char Char;
        public int Chance;

        public Character(char @char, int chance = 1)
        {
            Char = @char;
            Chance = chance;
        }
        public static readonly Character[] EnglishAlphabet = new Character[]
        {
                new Character('a', 820),
                new Character('b', 150),
                new Character('c', 280),
                new Character('d', 430),
                new Character('e', 1300),
                new Character('f', 220),
                new Character('g', 200),
                new Character('h', 610),
                new Character('i', 700),
                new Character('j', 15),
                new Character('k', 77),
                new Character('l', 400),
                new Character('m', 240),
                new Character('n', 670),
                new Character('o', 750),
                new Character('p', 190),
                new Character('q', 9),
                new Character('r', 600),
                new Character('s', 630),
                new Character('t', 91),
                new Character('u', 280),
                new Character('v', 98),
                new Character('w', 240),
                new Character('x', 15),
                new Character('y', 200),
                new Character('z', 7),
        };
        public static readonly Character[] RussianAlphabet = new Character[]
        {
                new Character('а', 801),
                new Character('б', 159),
                new Character('в', 459),
                new Character('г', 170),
                new Character('д', 298),
                new Character('е', 845),
                new Character('ё', 4),
                new Character('ж', 94),
                new Character('з', 165),
                new Character('и', 735),
                new Character('й', 121),
                new Character('к', 349),
                new Character('л', 440),
                new Character('м', 321),
                new Character('н', 670),
                new Character('о', 1097),
                new Character('п', 281),
                new Character('р', 473),
                new Character('с', 547),
                new Character('т', 626),
                new Character('у', 262),
                new Character('ф', 26),
                new Character('х', 97),
                new Character('ц', 48),
                new Character('ч', 144),
                new Character('ш', 73),
                new Character('щ', 36),
                new Character('ъ', 4),
                new Character('ы', 190),
                new Character('ь', 174),
                new Character('э', 32),
                new Character('ю', 64),
                new Character('я', 201),
        };
        public static readonly Character[] Numbers = new Character[]
        {
                new Character('0', 300),
                new Character('1', 200),
                new Character('2', 100),
                new Character('3', 100),
                new Character('4', 100),
                new Character('5', 100),
                new Character('6', 100),
                new Character('7', 100),
                new Character('8', 100),
                new Character('9', 100),
        };
        public static readonly Character[] EnglishAndRussianAlphabetAndNumbers = new Character[]
        {
                new Character('a', 820),
                new Character('b', 150),
                new Character('c', 280),
                new Character('d', 430),
                new Character('e', 1300),
                new Character('f', 220),
                new Character('g', 200),
                new Character('h', 610),
                new Character('i', 700),
                new Character('j', 15),
                new Character('k', 77),
                new Character('l', 400),
                new Character('m', 240),
                new Character('n', 670),
                new Character('o', 750),
                new Character('p', 190),
                new Character('q', 9),
                new Character('r', 600),
                new Character('s', 630),
                new Character('t', 91),
                new Character('u', 280),
                new Character('v', 98),
                new Character('w', 240),
                new Character('x', 15),
                new Character('y', 200),
                new Character('z', 7),
                new Character('а', 801),
                new Character('б', 159),
                new Character('в', 459),
                new Character('г', 170),
                new Character('д', 298),
                new Character('е', 845),
                new Character('ё', 4),
                new Character('ж', 94),
                new Character('з', 165),
                new Character('и', 735),
                new Character('й', 121),
                new Character('к', 349),
                new Character('л', 440),
                new Character('м', 321),
                new Character('н', 670),
                new Character('о', 1097),
                new Character('п', 281),
                new Character('р', 473),
                new Character('с', 547),
                new Character('т', 626),
                new Character('у', 262),
                new Character('ф', 26),
                new Character('х', 97),
                new Character('ц', 48),
                new Character('ч', 144),
                new Character('ш', 73),
                new Character('щ', 36),
                new Character('ъ', 4),
                new Character('ы', 190),
                new Character('ь', 174),
                new Character('э', 32),
                new Character('ю', 64),
                new Character('я', 201),
                new Character('0', 300),
                new Character('1', 200),
                new Character('2', 100),
                new Character('3', 100),
                new Character('4', 100),
                new Character('5', 100),
                new Character('6', 100),
                new Character('7', 100),
                new Character('8', 100),
                new Character('9', 100),
        };
    }



}
